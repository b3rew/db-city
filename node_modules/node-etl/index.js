((api,_m,JsDK,JFile)=>{

     api.DLM_SPACE=" ";
     api.DLM_SPACE_OR_MORE=/\s{1,}/g;
     /**
     *  @param what string|object|dataSource|connection filePath, jFile instance , dataSource object, DB connection....
     * @param how object   {delimitor:',',headers:['id','desc','name'],cols:[0,[1,2,3],4]}
     *         headers: 0 -> exist in 1st line
     *         headers:Person -> (Object.keys(new Person()))-> ['id','name,']
     *        headers:function(f1,f2,f3,f4,f5){
                      //or arguments

                }
     */
      api.extract=function(what,how){
           let what_overload={"string_false":"filePath","object_true":"jfile",object_flase:"db"};
           how=JsDK.extends(how ||{},api.extract.meta.DEFAULT_HOW);
        //   how.cols=how.cols || how.headers.map((e,i)=>i);

           how.process=how.process || function(line,opts){
                var row=line.split(opts.delimitor),oRow={};
                if(!opts.headers.length) {
                  opts.headers=row.map((e,i)=>`h${i+1}`);
                }
                row.forEach(function(data,i){
                     oRow[opts.headers[i]]=data;
                });
                if(opts.cols && opts.cols_headers && (opts.cols.length === opts.cols_headers.length)){
                   let oRowFiltered={};
                    opts.cols.forEach((indexRow,i)=>{
                      if(typeof indexRow==='number'){indexRow=[indexRow]};
                      oRowFiltered[opts.cols_headers[i]]=indexRow.map((j)=>oRow[opts.headers[j]]).join(opts.cols_join || "");
                    })
                   return oRowFiltered;
                }
                 return oRow;

           };
          return api[`extract_${what_overload[`${typeof what}_${what.constructor ===JFile}`]}`](what,how);
      };
      api.extract_filePath=function(what,how){
          return api.extract_jfile(new JFile(what),how);
      }
      api.extract_jfile=function(what,how){

          return what.lines.filter(how.ignore).map((line)=> how.process(line,how));
      };

      api.extract.meta={};
      api.extract.meta.DEFAULT_HOW={delimitor:',',headers:[],ignore:(row)=>row.noSpace().length!==0};





      _m.exports=api;
})({},module,require('x-class'),require('jfile'))
